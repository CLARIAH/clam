$def with (version, system_id,system_name, system_description, user, project, url, statuscode,statusmessage,statuslog, completion, errors, errormsg, parameterdata, corpora, outputpaths, inputpaths,profiles, datafile, projects)
<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="$url/static/interface.xsl"?>
$if project and user:
    <clam version="$version" id="$system_id" name="$system_name" project="$project" user="$user" baseurl="$url">
$elif project:
    <clam version="$version" id="$system_id" name="$system_name" project="$project" baseurl="$url">
$elif user:
    <clam version="$version" id="$system_id" name="$system_name" user="$user" baseurl="$url">
$else:
    <clam version="$version" id="$system_id" name="$system_name" baseurl="$url">
 <description>$system_description</description>
$if not project:
        <projects>
        $for p, time in projects:
                <project href="$url/$p" time="$time">$p</project>
        </projects>
$if not datafile and project:
        <status code="$statuscode" message="$statusmessage" completion="$completion" errors="$errors" errormsg="$errormsg">
        $if statuscode == 1 or statuscode == 2:
            $for message, time, completion2 in statuslog:
                      <log time="$time" completion="$completion2">$message</log>
        </status>
$if statuscode == 0 or statuscode == 2 or not project:
        <parameters>
            $for group, parameters in parameterdata:
                <parametergroup name="$group">
                    $for parameter in parameters:
                       $if parameter.access(user):
                         $:parameter.xml()
                </parametergroup>
        </parameters>
$if statuscode == 0 or datafile or not project:
        <corpora>
            $for corpus in corpora:
                <corpus>$corpus</corpus>
        </corpora> 
        <profiles>
            $for profile in profiles:
                $:profile.xml()
        </profiles>
        $if project:
            <input>
                $for path, format, label, encoding in inputpaths:
                    <path format="$format" encoding="$encoding">$path</path>
            </input>
$if statuscode == 2 or datafile or not project:
        $if project:
            <output>
                $for path, format, label, encoding in outputpaths:
                    <path format="$format" encoding="$encoding">$path</path>
            </output>
 </clam>
